<adapter>
  <unique-id>MyInterlokInstance</unique-id>
  <start-up-event-imp>com.adaptris.core.event.StandardAdapterStartUpEvent</start-up-event-imp>
  <heartbeat-event-imp>com.adaptris.core.HeartbeatEvent</heartbeat-event-imp>
  <shared-components>
    <connections/>
    <services/>
  </shared-components>
  <event-handler class="default-event-handler">
    <unique-id>DefaultEventHandler</unique-id>
    <connection class="null-connection">
      <unique-id>agitated-einstein</unique-id>
    </connection>
    <producer class="null-message-producer">
      <unique-id>romantic-bartik</unique-id>
    </producer>
  </event-handler>
  <message-error-handler class="null-processing-exception-handler">
    <unique-id>silly-dijkstra</unique-id>
  </message-error-handler>
  <failed-message-retrier class="no-retries">
    <unique-id>jolly-ptolemy</unique-id>
  </failed-message-retrier>
  <channel-list>
    <channel>
      <consume-connection class="null-connection">
        <unique-id>stupefied-brahmagupta</unique-id>
      </consume-connection>
      <produce-connection class="null-connection">
        <unique-id>focused-hoover</unique-id>
      </produce-connection>
      <workflow-list>
        <standard-workflow>
          <consumer class="polling-trigger">
            <unique-id>cranky-goldberg</unique-id>
            <poller class="random-interval-poller"/>
          </consumer>
          <service-collection class="service-list">
            <unique-id>condescending-easley</unique-id>
            <services>
              <clone-message-service-list>
                <unique-id>clone message</unique-id>
                <services>
                  <service-list>
                    <services>
                      <add-metadata-service>
                        <metadata-element>
                          <key>oauth_client_id</key>
                          <value>pBWk0SmIcgZUurdm7pgiiMd5xYzV8avV</value>
                        </metadata-element>
                      </add-metadata-service>
                      <payload-from-template>
                        <unique-id>30557bef-aed4-45d7-8dd8-d36531f751da</unique-id>
                        <metadata-tokens>
                          <key-value-pair>
                            <key>oauth_client_id</key>
                            <value>__CLIENTID__</value>
                          </key-value-pair>
                        </metadata-tokens>
                        <template>{"client_id":"__CLIENTID__"}</template>
                      </payload-from-template>
                      <log-message-service/>
                    </services>
                  </service-list>
                </services>
              </clone-message-service-list>
              <clone-message-service-list>
                <unique-id>clone message</unique-id>
                <services>
                  <service-list>
                    <services>
                      <add-metadata-service>
                        <metadata-element>
                          <key>oauth_client_id</key>
                          <value>pBWk0SmIcgZUurdm7pgiiMd5xYzV8avV</value>
                        </metadata-element>
                      </add-metadata-service>
                      <payload-from-template>
                        <unique-id>30557bef-aed4-45d7-8dd8-d36531f751da</unique-id>
                        <metadata-tokens>
                          <key-value-pair>
                            <key>oauth_client_id</key>
                            <value>__CLIENTID__</value>
                          </key-value-pair>
                        </metadata-tokens>
                        <template>{"client_id":"__CLIENTID__"}</template>
                      </payload-from-template>
                      <log-message-service/>
                    </services>
                  </service-list>
                </services>
              </clone-message-service-list>
            </services>
          </service-collection>
          <producer class="null-message-producer">
            <unique-id>hopeful-davinci</unique-id>
          </producer>
          <produce-exception-handler class="null-produce-exception-handler"/>
          <unique-id>consumer</unique-id>
          <message-metrics-interceptor>
            <unique-id>gigantic-davinci-MessageMetrics</unique-id>
            <timeslice-duration>
              <unit>MINUTES</unit>
              <interval>5</interval>
            </timeslice-duration>
            <timeslice-history-count>12</timeslice-history-count>
          </message-metrics-interceptor>
          <in-flight-workflow-interceptor>
            <unique-id>gigantic-davinci-InFlight</unique-id>
          </in-flight-workflow-interceptor>
        </standard-workflow>
      </workflow-list>
      <unique-id>filesystem</unique-id>
    </channel>
    <channel>
      <consume-connection class="jetty-embedded-connection">
        <unique-id>jetty</unique-id>
      </consume-connection>
      <produce-connection class="null-connection">
        <unique-id>focused-hoover</unique-id>
      </produce-connection>
      <workflow-list>
        <standard-workflow>
          <consumer class="jetty-message-consumer">
            <unique-id>modest-raman</unique-id>
            <path>/api/logging</path>
            <parameter-handler class="jetty-http-ignore-parameters"/>
            <header-handler class="jetty-http-ignore-headers"/>
          </consumer>
          <service-collection class="service-list">
            <unique-id>condescending-easley</unique-id>
            <services>
              <embedded-scripting-service>
                <unique-id>select-elastic</unique-id>
                <language>javascript</language>
                <script><![CDATA[var failNext_index = Math.floor((Math.random() * 2));
var failNext_values = [ "true", "false"];
message.addMetadata('failure', failNext_values[failNext_index]);
                ]]>                </script>
              </embedded-scripting-service>
              <if-then-otherwise>
                <unique-id>shall-i-fail</unique-id>
                <condition class="metadata">
                  <operator class="equals">
                    <value>true</value>
                  </operator>
                  <metadata-key>failure</metadata-key>
                </condition>
                <then>
                  <service class="service-list">
                    <unique-id>fail</unique-id>
                    <services>
                      <always-fail-service>
                        <unique-id>failure-triggered</unique-id>
                      </always-fail-service>
                    </services>
                  </service>
                </then>
                <otherwise>
                  <service class="service-list">
                    <unique-id>success</unique-id>
                    <services>
                      <payload-from-template>
                        <unique-id>overwrite-payload</unique-id>
                        <metadata-tokens/>
                        <template><![CDATA[{"workflow":"success"}]]></template>
                        <multi-line-expression>false</multi-line-expression>
                      </payload-from-template>
                    </services>
                  </service>
                </otherwise>
              </if-then-otherwise>
              <jetty-response-service>
                <unique-id>send-200</unique-id>
                <http-status>200</http-status>
                <content-type>application/json</content-type>
                <response-header-provider class="jetty-no-response-headers"/>
              </jetty-response-service>
            </services>
          </service-collection>
          <producer class="null-message-producer">
            <unique-id>hopeful-davinci</unique-id>
          </producer>
          <produce-exception-handler class="null-produce-exception-handler"/>
          <unique-id>gigantic-davinci</unique-id>
          <message-metrics-interceptor>
            <unique-id>gigantic-davinci-MessageMetrics</unique-id>
            <timeslice-duration>
              <unit>MINUTES</unit>
              <interval>5</interval>
            </timeslice-duration>
            <timeslice-history-count>12</timeslice-history-count>
          </message-metrics-interceptor>
          <in-flight-workflow-interceptor>
            <unique-id>gigantic-davinci-InFlight</unique-id>
          </in-flight-workflow-interceptor>
        </standard-workflow>
      </workflow-list>
      <message-error-handler class="standard-processing-exception-handler">
        <unique-id>error-handler</unique-id>
        <processing-exception-service class="service-list">
          <unique-id>send-error-response</unique-id>
          <services>
            <exception-report-service>
              <unique-id>generate-exception-msg</unique-id>
              <exception-serializer class="exception-as-json"/>
            </exception-report-service>
            <jetty-response-service>
              <unique-id>send-500</unique-id>
              <http-status>500</http-status>
              <content-type>application/json</content-type>
              <response-header-provider class="jetty-no-response-headers"/>
            </jetty-response-service>
          </services>
        </processing-exception-service>
      </message-error-handler>
      <unique-id>jetty</unique-id>
    </channel>
  </channel-list>
  <message-error-digester class="standard-message-error-digester">
    <unique-id>ErrorDigest</unique-id>
    <digest-max-size>100</digest-max-size>
  </message-error-digester>
</adapter>
